1. 변수
 - 프로그래밍에서 값을 저장하거나 변경할 수 있는 메모리 공간 
 - python에서 변수를 만드는 방법: 변수 이름 = 값 (age = 10, sold_out = False) 
 1) 변수 이름 및 규칙 
  - 변수의 이름은 숫자로 시작할 수 없다.
  - 변수의 이름에 공백, 특수 문자를 넣을 수 없다.
  - 변수의 이름은 이미 코딩 언어에서 사용되고 있는 단어와 겹치면 안된다. 

2. 데이터 타입(자료형)
 1) 정수형(Integer): 1,2,3,0,-1,-2,-3
 2) 실수형(Float): 3.1, 5.0, -1.0, 15.74
 3) 문자열형(String): '안녕',"안녕",'hello','3'
 4) 부울형(Boolean): True(1),False(0)

3. 강제 형 변환 
 1) int(x): 정수로 변환
 2) float(x): 실수로 변환 
 3) str(x): 문자열로 변환 

4. 입력
 - input('입력 문자열') -> 실행 화면에 입력 문자열을 보여주고 사용자로부터 입력받은 값을 가져오는 함수 

5. 출력 
 1) print() 함수 사용
 2) 형식 지정자: %s(문자열 출력), %f(부동소수점 출력), %d(정수 출력) 
 3) format: print("오늘은 {:d}월 {:5.2f}일 입니다.".format(6,26)) -> 오늘은 6월 26.00일 입니다. 

6. 연산자 
 1) 산술 연산자 
  - +,-,*,/: 더하기, 뺴기, 곱하기, 나누기
  - //: 나눈 몫 / %: 나눈 나머지 / **: 거듭 제곱 / 문자열+문자열: 두 문자열을 결합 / 문자열*숫자: 문자열을 숫자만큼 반복 
 2) 논리 연산자 
  - 조건1 and 조건2: 조건1과 조건2가 모두 참이어야 참(True) / 조건1 or 조건2: 하나만 참이면 참(True)/ not x: x가 아니면 참(True)
 3) 비교 연산자
  == 같다 / != 같지 않다 / > 크다 / >= 크거나 같다 / < 작다 / <= 작거나 같다 

7. 문자열 자르기(Slicing)
 1) 문자열 index: 0부터 시작한다. 예) string="PYTHON"; print(string[1]) -> Y
 2) 문자열 slicing: 문자열 변수 이름[Start:Stop:Step] Start index에서 시작하여 Step만큼 증가하며 Stop-1 위치에서 자른다. 
  예) a = "PYTHON" 
      print(a[2]) -> T
      print(a[-4]) -> T
      print(a[1:3]) -> YT 
      print(a[0:5:2]) -> PTO  

8. 조건문 
if 조건식1:
   실행문1
elif 조건식2:
    실행문2
elif 조건식3:
    실행문3
...
else:
    실행문n

9. 반복문 for 
for 변수 in 시퀀스 # 시퀀스의 각 요소에 대해 실행할 코드 
 1) range() 함수 사용 
   for i in range(start, stop, step):
       print(i)
 2) 반복 범위가 문자인 경우 
    for x in '월화수':
        print(x)

10. 함수
 1) 함수의 정의 및 싫행 
    def add(x,y): # 매개변수 x,y 
        s = x + y
        a = s / 2 
        return s, a # 반환값 s, a 
    h,a = add(10,20)
    print("합:", h, "평균:", a) # 반환값 h,a
 2) 함수의 종류 
  - 내장 함수: 파이썬에서 제공하는 기본 함수
  - 사용자 정의 함수: 프로그래머가 직접 정의하는 함수 
 3) 함수의 주요 기능
  - 코드 재사용성 향상 / 코드 가독성 향상 / 코드 유지 보수성 향상 
 4) 함수 사용 시 주의 사항 
  - 함수 이름, 반환값은 명확하게 / 매개변수는 최소한으로 / 코드는 간결하고 이해하기 쉽게 작성  

11. 반복문 while 
while 조건식:
      조건식이 참일 때 실행할 코드 
i = 1 (시작값)
while i <= 10: (조건이 참일 동안에 계속 반복하여 실행)
      print(i) (실행 내용)
      i += 1  ( 값 증가 ) 

12. 반복문 do~while -> 무조건 1번은 실행함
do:
   실행될 코드
while 조건식

i = 1 
do:
   print(i)
   i += 1 
while i <= 10 
